// package main

// import (
// 	"bufio"
// 	"fmt"
// 	"log"
// 	"os"
// 	"strings"
// )

// // it should return reachable neighbours' indexes [][]int
// func neighbours(i int, j int) {
// 	// todo
// }

// func main() {
// 	scanner := scan("./input.txt")
// 	/************************************************************

// 	  Main logic is written below
// 	  scanner.Scan() - scans a new line
// 	  scanner.Text() - returns a new scanned line
// 	  scanner.Err()  - returns an occured error while scanning

// 	************************************************************/
// 	grid := make([][]string, 0)
// 	start := make([]int, 2)
// 	end := make([]int, 2)

// 	for scanner.Scan() {
// 		grid = append(grid, strings.Split(scanner.Text(), ""))
// 	}

// 	for i := 0; i < len(grid); i++ {
// 		for j := 0; j < len(grid[i]); j++ {
// 			if grid[i][j] == "S" {
// 				start[0] = i
// 				start[1] = j

// 			} else if grid[i][j] == "E" {
// 				end[0] = i
// 				end[1] = j
// 			}
// 		}
// 	}
// 	check(scanner.Err())

// 	fmt.Println(grid)
// }

// func scan(path string) *bufio.Scanner {
// 	file, err := os.Open(path)
// 	check(err)
// 	return bufio.NewScanner(file)
// }

// func check(err error) {
// 	if err != nil {
// 		log.Fatal(err)
// 	}
// }